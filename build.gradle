buildscript {


    repositories {
        jcenter()
        mavenCentral()
    }
//    dependencyManagement {
//        imports {
//            mavenBom 'com.amazonaws:aws-java-sdk-bom:1.10.47'
//        }
//    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")
        //classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.4.RELEASE")
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.3'
        classpath 'com.amazonaws:aws-java-sdk-ecr:1.11.60'
        //classpath 'com.amazonaws:aws-java-sdk:1.11.60'
    }

    //apply plugin: "io.spring.dependency-management"
}



apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'com.bmuschko.docker-remote-api'
//apply plugin: 'com.miovision.des.build.awsecr'

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.DockerTagImage

version = '0.1-SNAPSHOT'
ext.artifactId = 'johntest'

jar {
    baseName = 'tryboot'
    //version = '0.1.0'
}

repositories {
    mavenCentral()
}

configurations {
    dockerJava {
        resolutionStrategy {
            force 'de.gesellix:unix-socket-factory:2016-04-06T22-21-19'
        }
    }
}

docker {
    url = 'unix:///var/run/docker.sock'
}

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]

    compile("com.ryantenney.metrics:metrics-spring:3.1.3")
    compile("org.coursera:dropwizard-metrics-datadog:1.1.6")
    compile("com.datadoghq:java-dogstatsd-client:2.3")
    compile "org.projectlombok:lombok:1.16.8"
    testCompile("junit:junit")
    testCompile "org.springframework.boot:spring-boot-starter-test"
}

//ext.timestamp = new Date().format("yyyyMMdd'_'HHmmss", TimeZone.default)
ext.timestamp = "2"
ext.versionDesc = "${version}-${timestamp}"

task copyForDocker(type: Copy, dependsOn: bootRepackage) {
    from 'build/libs/tryboot-0.1.0.jar'
    from 'src/main/docker/Dockerfile'
    into 'build/docker'
}

task buildImage(type: DockerBuildImage) {
    dependsOn copyForDocker
    inputDir = file('build/docker')
    tag = "johntest"
}

task tagLocalImageForECR(type: DockerTagImage) {
    dependsOn buildImage
    targetImageId { buildImage.getImageId() }
    repository = "425548863806.dkr.ecr.us-east-1.amazonaws.com/johntest"
    tag = "${versionDesc}"
}

task publishImage (type: DockerPushImage) {
    dependsOn tagLocalImageForECR
    imageName = '425548863806.dkr.ecr.us-east-1.amazonaws.com/johntest'
    tag = "${versionDesc}"
}
